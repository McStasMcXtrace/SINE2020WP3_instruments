/*******************************************************************************
*         McStas instrument definition URL=http://www.mcstas.org
*
* Instrument: Test_Sqq_w
*
* %Identification
* Written by: P. Willendrup
* Date: June, 2018
* Origin: DTU
*
* %INSTRUMENT_SITE: Tests
*
* Test instrument for the Sqq_w_monitor and Magnon_bcc components, derived from template_Laue 
*
* %Description
*
* %Parameters
* lambda:     [AA]      Central wavelength of wavelength distribution
* dlambda:    [AA]      Width of wavelength distribution
* Rotation:   [deg]     Sample orientation
* inelastic:  [in 0:1]  Fraction of statistics to scatter inelastically
* aa:         [AA]      BCC lattice constant
* sample_J1:  [meV]     Magnitude of sample nearest-neighbour interaction
* sample_J2:  [meV]     Magnitude of sample next-nearest-neighbour interaction
* TT:         [K]       Sample temperature
* FerroMagnet:[boolean] Flag to choose if sample is FM or AFM
* verbose:    [boolean] Flag to allow verbose information from Magnon comp
* imultiplier:[1]       Parameter to rescale intensity-output from Magnon comp
*
* %End
*******************************************************************************/

/* Change name of instrument and input parameters with default values */
DEFINE INSTRUMENT Magnon_bcc_visualisation(lambda=10, dlambda=9.9, Rotation=0, inelastic=1, aa=6.283185307179586,
					   sample_J1=2, sample_J2=0, TT=300, FerroMagnet=0, Verbose=0, imultiplier=1,IDX=-22,
					   noPSD=1,energy_cuts=0)

DECLARE %{
  double Samplechoice;
  double Energy;
  int Detectable;
%}

TRACE

COMPONENT Origin = Progress_bar()
  AT (0,0,0) ABSOLUTE

COMPONENT source = Source_simple(
  radius=0.02, focus_xw=0.01, focus_yh=0.01, target_index=1,
  lambda0=lambda, dlambda=dlambda, flux=1e12)
AT (0,0,0) ABSOLUTE
EXTEND %{
  Samplechoice=rand01();
  Detectable=0;
%}


COMPONENT Magnon = Magnon_bcc(
    radius=0.02,
    yheight=0.03,
    sigma_abs=0, 
    sigma_inc=1, 
    a=aa,  
    J1=sample_J1, 
    J2=sample_J2,
    D=0.0,
    s=1,
    DW=1,
    verbose=Verbose, 
    T=TT, 
    FM = FerroMagnet,
    target_index=8,
    focus_xw=0, 
    focus_yh=0,
    focus_aw=180, /* For statistics considerations, only a small angular */
    focus_ah=0.1)   /* band arround sample is illuminated */
  WHEN (inelastic>0 && Samplechoice<inelastic)  AT (0, 0, 5.1) RELATIVE source
  ROTATED (0, Rotation, 0) RELATIVE source
EXTEND %{
   p/=mcipinelastic;
   p*=mcipimultiplier;
%}


  COMPONENT Lattice = Arm()
  WHEN (inelastic<1 && Samplechoice>=inelastic) AT ( 0, 0, 5.1) RELATIVE source
  ROTATED (0, Rotation, 0) RELATIVE source
EXTEND %{
   p/=(1-mcipinelastic);
   // Remove direct beam
   //if(!SCATTERED) ABSORB;
%}

/* Ideal representation */
  COMPONENT Sqqw = Sqq_w_monitor(filename="qa_vs_qb",nE=29,nqa=451,nqb=451,qamin=-4.5,qamax=4.5,qbmin=-4.5,qbmax=4.5,index=-2,Emin=-14, Emax=14, yheight=0.1)
  AT (0,0,0) RELATIVE Magnon

  COMPONENT det= PSD_monitor_4PI(radius=1.01, nx=360,ny=180,filename="psd",restore_neutron=1,nowritefile=noPSD)
AT (0,0,0) RELATIVE Magnon

/* Add slits to show that we only accept certain directions */

COMPONENT Arm1 = Arm()
AT (0,0,0) RELATIVE Magnon
ROTATED (0,10,0) ABSOLUTE

COMPONENT Arm2 = Arm()
AT (0,0,0) RELATIVE Magnon
ROTATED (0,20,0) ABSOLUTE

COMPONENT Arm3 = Arm()
AT (0,0,0) RELATIVE Magnon
ROTATED (0,30,0) ABSOLUTE

COMPONENT Arm4 = Arm()
AT (0,0,0) RELATIVE Magnon
ROTATED (0,40,0) ABSOLUTE

COMPONENT Arm5 = Arm()
AT (0,0,0) RELATIVE Magnon
ROTATED (0,50,0) ABSOLUTE

COMPONENT Arm6 = Arm()
AT (0,0,0) RELATIVE Magnon
ROTATED (0,60,0) ABSOLUTE

COMPONENT Arm7 = Arm()
AT (0,0,0) RELATIVE Magnon
ROTATED (0,70,0) ABSOLUTE

COMPONENT Arm8 = Arm()
AT (0,0,0) RELATIVE Magnon
ROTATED (0,80,0) ABSOLUTE

COMPONENT Arm9 = Arm()
AT (0,0,0) RELATIVE Magnon
ROTATED (0,90,0) ABSOLUTE
EXTEND %{
    /* Check particle energy */
if (mcipenergy_cuts==1) {
    Energy = VS2E*(  vx*vx +  vy*vy +    vz*vz);
    if ((fabs(Energy-2.5)/2.5)<0.03) Detectable=1;
    if ((fabs(Energy-2.8)/2.8)<0.03) Detectable=1;
    if ((fabs(Energy-3.1)/3.1)<0.03) Detectable=1;
    if ((fabs(Energy-3.5)/3.5)<0.03) Detectable=1;
    if ((fabs(Energy-4.0)/4.0)<0.03) Detectable=1;
    if ((fabs(Energy-4.5)/4.5)<0.03) Detectable=1;
    if ((fabs(Energy-5.0)/5.0)<0.03) Detectable=1;
    if ((fabs(Energy-5.5)/5.5)<0.03) Detectable=1;
    if ((fabs(Energy-6.5)/6.5)<0.03) Detectable=1;
    if ((fabs(Energy-8.0)/8.0)<0.03) Detectable=1;
    if(!Detectable) ABSORB;
}
%}

    
COMPONENT Slit1 = Slit(xwidth=0.05, yheight=0.05)
AT (0,0,1.01) RELATIVE Arm1
GROUP Slits

COMPONENT Slit2 = Slit(xwidth=0.05, yheight=0.05)
AT (0,0,1.01) RELATIVE Arm2
GROUP Slits

COMPONENT Slit3 = Slit(xwidth=0.05, yheight=0.05)
AT (0,0,1.01) RELATIVE Arm3
GROUP Slits

  COMPONENT Slit4 = Slit(xwidth=0.05, yheight=0.05)
AT (0,0,1.01) RELATIVE Arm4
GROUP Slits

COMPONENT Slit5 = Slit(xwidth=0.05, yheight=0.05)
AT (0,0,1.01) RELATIVE Arm5
GROUP Slits

  COMPONENT Slit6 = Slit(xwidth=0.05, yheight=0.05)
AT (0,0,1.01) RELATIVE Arm6
GROUP Slits
  
COMPONENT Slit7 = Slit(xwidth=0.05, yheight=0.05)
AT (0,0,1.01) RELATIVE Arm7
GROUP Slits

  COMPONENT Slit8 = Slit(xwidth=0.05, yheight=0.05)
AT (0,0,1.01) RELATIVE Arm8
GROUP Slits

COMPONENT Slit9 = Slit(xwidth=0.05, yheight=0.05)
AT (0,0,1.01) RELATIVE Arm9
GROUP Slits
 
COMPONENT Catchall = Arm ()
 AT (0,0,0) RELATIVE Arm9
GROUP Slits
EXTEND %{
  //SCATTER;
%}

COMPONENT Efilter = Arm ()
 AT (0,0,0) RELATIVE Arm9
GROUP Slits
EXTEND %{
%}



/* non-deal representation */
  COMPONENT Sqqw2 = Sqq_w_monitor(radius=1.1,filename="qa_vs_qb_2",nE=29,nqa=451,nqb=451,qamin=-4.5,qamax=4.5,qbmin=-4.5,qbmax=4.5,index=-24,Emin=-14, Emax=14, yheight=0.1)
  AT (0,0,0) RELATIVE Magnon

  /*COMPONENT det1= PSD_monitor_4PI(radius=1.11, nx=360,ny=180,filename="psd1",restore_neutron=1,nowritefile=noPSD)
    AT (0,0,0) RELATIVE Magnon*/
END

